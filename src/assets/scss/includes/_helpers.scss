// =============================================================================
//	HELPERS
// =============================================================================

// Clearfix
@mixin clearfix {

	&:after {
		content: "";
		display: table;
		clear: both;
	}
}

// Vertically align center
@mixin vertical-align {
	display: flex;
	align-items: center;
}

// Remove default list styling
@mixin remove-list-styles {
	padding: 0;
	margin: 0;

	li {
		list-style: none;
	}
}

// Maintain aspect radio
@mixin aspect-ratio($width, $height) {
	position: relative;

	&:before {
		display: block;
		content: "";
		width: 100%;
		padding-top: ($height / $width) * 100%;
	}

	> .aspect-ratio-content {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
	}
}

// Hide text not the pseudo
@mixin hide-text-not-pseudo {
	text-indent: -9999px;

	&:before,
	&:after {
		text-indent: 0;
		float: left;
		width: 100%;
		height: 100%;
		margin: 0;
	}
}

// Full width/height overlay.
// If it is a pseudo element, it will meeds an empty content property and the wrapper to have a relative position
@mixin full-overlay($bgColor: black) {
	@include position(absolute, 0 0 0 0);
	width: 100%;
	height: 100%;
	background-color: $bgColor;
}

// Iconfont icon in a circle with optional colours
@mixin icon-in-circle($bgColor: $icon-color, $color: white, $border: none ) {
	text-align: center;
	display: block;
	margin: 0;
	padding: 0;
	background-color: #{$bgColor};
	border-radius: 50%;
	border: $border;

	svg {
		fill: #{$color};
		box-sizing: content-box;
	}

	&:before {
		color: $color;
	}
}

@mixin icon-in-circle--size($dimension: 40px) {
	width: $dimension;
	height: $dimension;
	font-size: 10px;

	svg {
		width: $dimension / 2;
		height: $dimension / 2;
		margin-top: $dimension / 4;
		margin-bottom: $dimension / 4;
	}
}

@mixin icon-in-border-circle--size($dimension: 40px) {
	width: $dimension;
	height: $dimension;
	font-size: 10px;

	svg {
		width: $dimension / 2;
		height: $dimension / 2;
		margin-top: $dimension / 6;
		margin-bottom: $dimension / 6;
	}
}

@mixin horizontal-spacing {
	@include padding(null $horizontal-spacing-mobile);

	@include medium-and-up {
		@include padding(null $horizontal-spacing);
	}
}

// A container that center aligns with padding and max width
@mixin container {
	@include margin(null auto);
	max-width: $max-width-content;
	@include horizontal-spacing;
}

// Mixin for alert boxes/messages
@mixin alert-variant($background, $border, $text-color) {
    background-color: $background;
    border-color: $border;
    color: $text-color;
    font-weight: $font-weight-bold;

    hr {
        border-top-color: darken($border, 5%);
    }

    .a {
        color: darken($text-color, 10%);
        text-decoration: underline;
    }
}

// Clickable elements that are not an anchor
%clickable {
	cursor: pointer;

	&:active,
	&:focus,
	&:hover {
		opacity: 0.7;
	}
}

//	BG Images
%bg-cover {
	background-size: cover;
	background-position: center center;
	background-repeat: no-repeat;
}

//	Visibility
.hide {
	display: none !important;
}

%hide-text {
	overflow: hidden;
	text-indent: -9999px;
}

.tel-link {

	&:hover {
		opacity: 1;
		cursor: default;
	}
}

.full-img {
	width: 100%;
}

%margin-center {
	@include margin(null auto);
}
