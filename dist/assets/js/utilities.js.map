{"version":3,"sources":["utilities.js"],"names":["show","hide","isHidden","isVisible","disableOrEnableButton","addItemToCookie","readItemFromCookie","deleteItemFromCookie","openPanel","closePanel","allRadiosSelected","aRadioContains","getRandomInt","roundNumberTo","registerEvent","removeEvents","IS_OPEN","element","classList","remove","add","contains","disable","button","disabled","name","value","cookie","JSON","stringify","document","result","match","RegExp","parse","domain","window","location","host","toString","expiry","panel","panelId","getAttribute","toggleIcon","querySelector","radiosWraps","numberOfRadioGroups","length","numberOfRadiosSelected","forEach","checkedRadios","radiosWrap","querySelectorAll","radios","specifiedClass","containsClass","radio","checked","min","max","Math","floor","random","num","roundTo","resto","eventsArray","eventName","listener","push","eventObj","removeEventListener"],"mappings":"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","file":"utilities.js","sourcesContent":["import { nodesToArray } from '@pod-point/dom-ops';\n\nconst IS_OPEN = 'is-open';\n\n/**\n * Remove hidden class from element, showing it via CSS\n *\n * @param {element}\n */\nexport function show(element) {\n    element.classList.remove('hidden');\n}\n\n/**\n * Apply hidden class to element, hiding it via CSS\n *\n * @param {element}\n */\nexport function hide(element) {\n    element.classList.add('hidden');\n}\n\n/**\n * Check if an element is hidden (by CSS)\n *\n * @param {element}\n * @returns {boolean} is hidden\n */\nexport function isHidden(element) {\n    return element.classList.contains('hidden');\n}\n\n/**\n * Check if an element is visible (isn't hidden by CSS)\n *\n * @param {element}\n * @returns {boolean} is visible\n */\nexport function isVisible(element) {\n    return !isHidden(element);\n}\n\n/**\n * Disable or enable button element\n *\n * @param {element} button\n * @param {boolean} disable\n */\nexport function disableOrEnableButton(element, disable) {\n    const button = element;\n    if (disable) {\n        button.disabled = true;\n        button.classList.add('is-disabled');\n    } else {\n        button.disabled = false;\n        button.classList.remove('is-disabled');\n    }\n}\n\n/**\n * Add item to cookie\n *\n * @param {string} name of cookie\n * @param {obj} value of cookie\n */\nexport function addItemToCookie(name, value) {\n    const cookie = [`${name}=${JSON.stringify(value)}`];\n    document.cookie = cookie;\n}\n\n/**\n * Read item from cookie\n *\n * @param {string} name of cookie\n * @returns {obj} result\n */\nexport function readItemFromCookie(name) {\n    let result = document.cookie.match(new RegExp(`${name}=([^;]+)`));\n    if (result) result = JSON.parse(result[1]);\n    return result;\n}\n\n/**\n * Delete item from cookie\n *\n * @param {string} name of cookie\n */\nexport function deleteItemFromCookie(name) {\n    const domain = window.location.host.toString();\n    const expiry = '01-Jan-1970 00:00:01 GMT';\n    document.cookie = `${name}=; expires=${expiry}; path=/; domain=.${domain}`;\n}\n\n/**\n * Open panel\n *\n * @param {element} panel\n */\nexport function openPanel(panel) {\n    const panelId = panel.getAttribute('id');\n    const toggleIcon = document.querySelector(`[data-toggle-icon=\"${panelId}\"]`);\n\n    panel.classList.add(IS_OPEN);\n    if (toggleIcon) { toggleIcon.classList.add('rotate'); }\n}\n\n/**\n * Close panel\n *\n * @param {element} panel\n */\nexport function closePanel(panel) {\n    const panelId = panel.getAttribute('id');\n    const toggleIcon = document.querySelector(`[data-toggle-icon=\"${panelId}\"]`);\n\n    panel.classList.remove(IS_OPEN);\n    if (toggleIcon) { toggleIcon.classList.remove('rotate'); }\n}\n\n/**\n * All radios selected\n *\n * @param {nodeList} radio wrap elements\n * @return {boolean} all radios have been selected\n */\nexport function allRadiosSelected(radiosWraps) {\n    const numberOfRadioGroups = nodesToArray(radiosWraps).length;\n    let numberOfRadiosSelected = 0;\n\n    radiosWraps.forEach(radiosWrap => {\n        const checkedRadios = nodesToArray(radiosWrap.querySelectorAll('input[type=\"radio\"]:checked'));\n        if (checkedRadios.length === 1) { numberOfRadiosSelected += 1; }\n    });\n    return (numberOfRadioGroups === numberOfRadiosSelected);\n}\n\n/**\n * A radio contains a class\n *\n * @param {nodeList} radios\n * @param {string} the class\n * @return {boolean} a radio contains the specified class\n */\nexport function aRadioContains(radios, specifiedClass) {\n    let containsClass = false;\n    radios.forEach(radio => {\n        if (radio.checked) {\n            if (radio.classList.contains(specifiedClass)) { containsClass = true; }\n        }\n    });\n    return containsClass;\n}\n\n/**\n * Get random integar\n *\n * @param {integar} min\n * @param {integar} max\n * @return {integar} a random integar between the specified min and max\n */\nexport function getRandomInt(min, max) {\n    return Math.floor(Math.random() * ((max - min) + 1)) + min;\n}\n\n/**\n * Round number to\n *\n * @param {integar} number\n * @param {integar} number to round to\n * @return {integar} a number rounded to the specified number\n */\nexport function roundNumberTo(num, roundTo) {\n    const resto = num % roundTo;\n    return resto <= (roundTo / 2) ? (num - resto) : ((num + roundTo) - resto);\n}\n\n/**\n * Register an event in order to later on remove the event\n *\n * @param {array} events array\n * @param {element} element\n * @param {string} event name\n * @param {func} listener\n */\nexport function registerEvent(eventsArray, element, eventName, listener) {\n    eventsArray.push({ element, eventName, listener });\n}\n\n/**\n * Remove the events from the events array\n *\n * @param {array} events array\n * @param {callback} callback\n */\nexport function removeEvents(eventsArray) {\n    eventsArray.forEach(eventObj => {\n        const { element, eventName, listener } = eventObj;\n        element.removeEventListener(eventName, listener);\n    });\n}\n"]}